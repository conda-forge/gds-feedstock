{% set name = "gds-base" %}
{% set version = "3.0.1" %}

package:
  name: {{ name|lower }}-build
  version: {{ version }}

source:
  url: https://software.igwn.org/lscsoft/source/{{ name }}-{{ version }}.tar.gz
  sha256: 8a2e24708b5acf67881d71f7d3a843b44e51588d365071e96fd5e4f154a6f9cb
  patches:
    # fix ldflags
    - ldflags.patch
    # use tinfow instead of termcap
    - termcap.patch
    # hack the build to make it think we're using macports
    # see https://git.ligo.org/gds/gds/-/issues/69
    - macos-building_macports.patch  # [osx]
    # fix libtool's overlinking
    - overlinking.patch
    # backport https://git.ligo.org/gds/gds/-/merge_requests/248
    - monapi-libcurl.patch
    # backport https://git.ligo.org/gds/gds/-/merge_requests/295
    - getinterfaces.patch
    # fix uint32_t error (https://git.ligo.org/gds/gds/-/issues/184)
    - cstdint.patch

build:
  error_overdepending: true
  error_overlinking: true
  number: 0
  skip: true  # [win]

requirements:
  build:
    - gnuconfig  # [unix]
    - {{ compiler('cxx') }}
    - make  # [unix]
    - pkg-config
  host:
    - expat
    - fftw
    - jsoncpp
    - libcurl
    - libmetaio
    - ncurses
    - readline
    - zlib

outputs:
  - name: gds-base
    script: install-base.sh
    build:
      run_exports:
        - {{ pin_subpackage("gds-base", max_pin="x") }}
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - make  # [unix]
      host:
        - expat
        - fftw
        - jsoncpp
        - libcurl
        - libmetaio
        - zlib
    test:
      requires:
        - pkg-config
      commands:
        - pkg-config --print-errors --exact-version "{{ version }}" gdslxr
        - pkg-config --print-errors --exact-version "{{ version }}" gdslmsg
        - pkg-config --print-errors --exact-version "{{ version }}" gdshtml
        - pkg-config --print-errors --exact-version "{{ version }}" gdsbase
        - pkg-config --print-errors --exact-version "{{ version }}" gdsparsl
        - pkg-config --print-errors --exact-version "{{ version }}" gdsdmtsigp
        - pkg-config --print-errors --exact-version "{{ version }}" gdsjsstack
        - pkg-config --print-errors --exact-version "{{ version }}" gdssockutil
        - pkg-config --print-errors --exact-version "{{ version }}" gdscntr
        - pkg-config --print-errors --exact-version "{{ version }}" gdsframefast
        - pkg-config --print-errors --exact-version "{{ version }}" gdsframeutil
        - pkg-config --print-errors --exact-version "{{ version }}" gdsdaqs
        - pkg-config --print-errors --exact-version "{{ version }}" gds
        - pkg-config --print-errors --exact-version "{{ version }}" gdsmath
        - pkg-config --print-errors --exact-version "{{ version }}" gdsxsil
        - test -f ${PREFIX}/lib/libgdsbase${SHLIB_EXT}  # [unix]
    about:
      home: https://computing.docs.ligo.org/daswgweb/projects/dmt.html
      license: GPL-2.0-only
      license_family: GPL
      license_file: COPYING
      summary: Core libraries required by the rest of the GDS packages

  - name: gds-framexmit
    script: install-framexmit.sh
    build:
      run_exports:
        - {{ pin_subpackage("gds-framexmit", max_pin="x") }}
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - make  # [unix]
      host:
        - {{ pin_subpackage('gds-base', exact=True) }}
      run:
        - {{ pin_subpackage('gds-base', exact=True) }}
    test:
      requires:
        - pkg-config
      commands:
        # check for library
        - test -f ${PREFIX}/lib/libframexmit${SHLIB_EXT}  # [unix]
        # check for headers
        - test -d ${PREFIX}/include/gds/framexmit  # [unix]
        # check pkg-config
        - pkg-config --print-errors --exact-version {{ version }} gds-framexmit
    about:
      home: https://computing.docs.ligo.org/daswgweb/projects/dmt.html
      license: GPL-2.0-only
      license_family: GPL
      license_file: COPYING
      summary: GDS package low-latency libraries
      description: Low-latency libraries implement the gds shared memory and interconnects

  - name: gds-base-crtools
    script: install-base-crtools.sh
    build:
      run_exports:
        - {{ pin_subpackage("gds-base-crtools", max_pin="x") }}
    requirements:
      build:
        - {{ compiler('cxx') }}
        - make  # [unix]
      host:
        - fftw
        - {{ pin_subpackage('gds-base', exact=True) }}
      run:
        - {{ pin_subpackage('gds-base', exact=True) }}
    test:
      requires:
        - pkg-config
      commands:
        # check libraries
        - test -f ${PREFIX}/lib/libclient${SHLIB_EXT}  # [unix]
        - test -f ${PREFIX}/lib/libgdsalgo${SHLIB_EXT}  # [unix]
        - test -f ${PREFIX}/lib/libdmtaccess${SHLIB_EXT}  # [unix]
        # check pkg-config
        - pkg-config --print-errors --exact-version {{ version }} gdsalgo
        - pkg-config --print-errors --exact-version {{ version }} gdsdmtaccess
    about:
      home: https://computing.docs.ligo.org/daswgweb/projects/dmt.html
      license: GPL-2.0-only
      license_family: GPL
      license_file: COPYING
      summary: GDS package Frame I/O libraries

  - name: gds-base-gdstrig
    script: install-base-gdstrig.sh
    build:
      run_exports:
        - {{ pin_subpackage("gds-base-gdstrig", max_pin="x") }}
    requirements:
      build:
        - {{ compiler('cxx') }}
        - make  # [unix]
      host:
        - {{ pin_subpackage('gds-base', exact=True) }}
      run:
        - {{ pin_subpackage('gds-base', exact=True) }}
    test:
      requires:
        - pkg-config
      commands:
        - pkg-config --print-errors --exact-version {{ version }} gdstrig
        - test -f ${PREFIX}/lib/libgdstrig${SHLIB_EXT}  # [unix]
    about:
      home: https://computing.docs.ligo.org/daswgweb/projects/dmt.html
      license: GPL-2.0-only
      license_family: GPL
      license_file: COPYING
      summary: Ligo GDS trigger library

  - name: gds-base-monitors
    script: install-base-monitors.sh
    build:
      ignore_run_exports_from:
        # the build needs the c++ compiler, but doesn't
        # link against it
        - {{ compiler('cxx') }}
      run_exports:
        - {{ pin_subpackage("gds-base-monitors", max_pin="x") }}
    requirements:
      build:
        - {{ compiler('cxx') }}
        - make  # [unix]
      host:
        - {{ pin_subpackage('gds-base', exact=True) }}
        - {{ pin_subpackage('gds-base-gdstrig', exact=True) }}
      run:
        - {{ pin_subpackage('gds-base', exact=True) }}
        - {{ pin_subpackage('gds-base-gdstrig', exact=True) }}
    test:
      requires:
        - pkg-config
      commands:
        - test -f ${PREFIX}/lib/libmonitor${SHLIB_EXT}  # [unix]
        - test -f ${PREFIX}/lib/libtclient${SHLIB_EXT}  # [unix]
        - pkg-config --print-errors --exact-version "{{ version }}" gdsmonitor  # [unix]
        - pkg-config --print-errors --exact-version "{{ version }}" gdstclient  # [unix]
    about:
      home: https://computing.docs.ligo.org/daswgweb/projects/dmt.html
      license: GPL-2.0-only
      license_family: GPL
      license_file: COPYING
      summary: GDS Libraries used by DMT Monitor programs

  - name: gds-base-web
    script: install-base-web.sh
    requirements:
      build:
        - {{ compiler('cxx') }}
        - make  # [unix]
      host:
        - {{ pin_subpackage('gds-base', exact=True) }}
        - {{ pin_subpackage('gds-base-crtools', exact=True) }}
      run:
        - {{ pin_subpackage('gds-base', exact=True) }}
        - {{ pin_subpackage('gds-base-crtools', exact=True) }}
    test:
      commands:
        - webview -h
        - webxmledit -h
    about:
      home: https://computing.docs.ligo.org/daswgweb/projects/dmt.html
      license: GPL-2.0-only
      license_family: GPL
      license_file: COPYING
      summary: DMT web services

  - name: gds-services
    script: install-services.sh
    build:
      run_exports:
        - {{ pin_subpackage("gds-services", max_pin="x") }}
    requirements:
      build:
        - {{ compiler('cxx') }}
        - make  # [unix]
      host:
        - {{ pin_subpackage('gds-base', exact=True) }}
        - {{ pin_subpackage('gds-base-crtools', exact=True) }}
        - {{ pin_subpackage('gds-base-gdstrig', exact=True) }}
        - {{ pin_subpackage('gds-base-monitors', exact=True) }}
      run:
        - {{ pin_subpackage('gds-base', exact=True) }}
        - {{ pin_subpackage('gds-base-crtools', exact=True) }}
        - {{ pin_subpackage('gds-base-gdstrig', exact=True) }}
        - {{ pin_subpackage('gds-base-monitors', exact=True) }}
    test:
      commands:
        - NameCtrl --help
        - dmt_nameserver --help
    about:
      home: https://computing.docs.ligo.org/daswgweb/projects/dmt.html
      license: GPL-2.0-only
      license_family: GPL
      license_file: COPYING
      summary: GDS runtime services

about:
  home: https://computing.docs.ligo.org/daswgweb/projects/dmt.html
  license: GPL-2.0-only
  license_family: GPL
  license_file: COPYING
  summary: LIGO Global Diagnostics System

extra:
  feedstock-name: gds
  recipe-maintainers:
    - duncanmmacleod
    - emaros
